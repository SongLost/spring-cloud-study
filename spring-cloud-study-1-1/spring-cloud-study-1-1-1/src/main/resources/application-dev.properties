###############################################################
########   server配置信息
###############################################################
# 项目contextPath，一般在正式发布版本中，我们不配置
# 避免加上更目录：Cannot execute request on any known server
# 加上根目录也需要在注册地址上加入根
# server.context-path=/eureka81
# 错误页，指定发生错误时，跳转的URL。请查看BasicErrorController源码便知
# server.error.path=/error
# 服务端口
server.port=81
# session最大超时时间(分钟)，默认为30
# server.session-timeout=60
# 该服务绑定IP地址，启动服务器时如本机不是该IP地址则抛出异常启动失败，只有特殊需求的情况下才配置
# server.address=192.168.16.11



###############################################################
########   eureka配置信息
###############################################################
# 指定运行环境
eureka.environment=dev
# 通过spring.application.name属性，我们可以指定微服务的名称后续在调用的时候只需要使用该名称就可以进行服务的访问。
spring.application.name=eureka-server
eureka.instance.hostname=eureka1.timebusker.cn
# eureka是默认使用hostname进行注册，可通过一下项自动获取注册服务IP或者直接通过eureka.instance.ip-address指定IP
# eureka.instance.prefer-ip-address=true
# eureka.instance.preferIpAddress=true
# 在eureka 服务端显示为IP 
# 不配置，默认显示主机名
eureka.instance.instance-id = ${eureka.instance.hostname}
# 是否将eureka自身作为应用注册到eureka注册中心
# 是否注册到eureka
# eureka.client.register-with-eureka=false
# 为true时，可以启动，但报异常：Cannot execute request on any known server
# 是否从eureka获取注册信息
# eureka.client.fetch-registry=false
# 关闭自我保护
# eureka.server.enable-self-preservation=false
# 清理无效节点的时间间隔（单位毫秒，默认是60*1000）
eureka.server.eviction-interval-timer-in-ms=30000
# eureka服务器的地址（注意：地址最后面的 /eureka/ 这个是默认值）
# 如果有根目录，加上根目录
# eureka.client.serviceUrl.defaultZone=http://127.0.0.1:${server.port}/${server.context-path}/eureka/
eureka.client.serviceUrl.defaultZone=http://eureka2.timebusker.cn:82/eureka/

# 注意：
# EMERGENCY! EUREKA MAY BE INCORRECTLY CLAIMING INSTANCES ARE UP WHEN THEY'RE NOT. RENEWALS ARE LESSER THAN THRESHOLD AND 
# HENCE THE INSTANCES ARE NOT BEING EXPIRED JUST TO BE SAFE.
# 分析：是由于Eureka进入了保护模式。
# 在保护模式下，Eureka Server将会尝试保护其服务注册表中的信息，暂时不会注销服务注册表中的服务。
# eureka.server.enable-self-preservation=false

# 在同一个主机上作伪集群时，不应该开启将IP注册到注册中心和需要将各个服务节点交叉注册，否则服务节点一直处于不可用的服务分片（unavailable-replicas）节点上
# eureka.instance.prefer-ip-address=true
# eureka.instance.preferIpAddress=true
# eureka.client.register-with-eureka=false



###############################################################
########   undertow 配置信息
###############################################################
# Undertow access log directory.
# server.undertow.accesslog.dir= 
# Enable access log.
# server.undertow.accesslog.enabled=false 
# Format pattern for access logs.
# server.undertow.accesslog.pattern=common 
# Log file name prefix.
# server.undertow.accesslog.prefix=access_log. 
# Enable access log rotation.
# server.undertow.accesslog.rotate=true 
# Log file name suffix.
# server.undertow.accesslog.suffix=log 
# Size of each buffer in bytes.
# server.undertow.buffer-size= 
# Number of buffer per region.
# server.undertow.buffers-per-region= 
# Allocate buffers outside the Java heap.
# server.undertow.direct-buffers= 
# Number of I/O threads to create for the worker.
server.undertow.io-threads= 2 
# Maximum size in bytes of the HTTP post content.
server.undertow.max-http-post-size= 0 
# Number of worker threads.
server.undertow.worker-threads= 2 